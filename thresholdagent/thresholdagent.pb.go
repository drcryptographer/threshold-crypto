// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.6
// source: proto/thresholdagent.proto

package thresholdagent

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_UNKNOWN   Status = 0
	Status_SUCCEEDED Status = 1
	Status_DENIED    Status = 2
	Status_FAILED    Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCEEDED",
		2: "DENIED",
		3: "FAILED",
	}
	Status_value = map[string]int32{
		"UNKNOWN":   0,
		"SUCCEEDED": 1,
		"DENIED":    2,
		"FAILED":    3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_thresholdagent_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_thresholdagent_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{0}
}

type SignatureType int32

const (
	SignatureType_SCHNORRv1 SignatureType = 0 //bitcoin schnorr
	SignatureType_SCHNORRv2 SignatureType = 1 //ethereum schnorr
	SignatureType_ECDSAv1   SignatureType = 2 //bitcoin ecdsa
	SignatureType_ECDSAv2   SignatureType = 3 //ethereum ecdsa
)

// Enum value maps for SignatureType.
var (
	SignatureType_name = map[int32]string{
		0: "SCHNORRv1",
		1: "SCHNORRv2",
		2: "ECDSAv1",
		3: "ECDSAv2",
	}
	SignatureType_value = map[string]int32{
		"SCHNORRv1": 0,
		"SCHNORRv2": 1,
		"ECDSAv1":   2,
		"ECDSAv2":   3,
	}
)

func (x SignatureType) Enum() *SignatureType {
	p := new(SignatureType)
	*p = x
	return p
}

func (x SignatureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_thresholdagent_proto_enumTypes[1].Descriptor()
}

func (SignatureType) Type() protoreflect.EnumType {
	return &file_proto_thresholdagent_proto_enumTypes[1]
}

func (x SignatureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureType.Descriptor instead.
func (SignatureType) EnumDescriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{1}
}

type SchnorrRound0Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string        `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	SType       SignatureType `protobuf:"varint,2,opt,name=sType,proto3,enum=thresholdagent.SignatureType" json:"sType,omitempty"`
	SignerCerts [][]byte      `protobuf:"bytes,3,rep,name=signerCerts,proto3" json:"signerCerts,omitempty"`
	// Types that are assignable to Request:
	//	*SchnorrRound0Msg_Threshold
	//	*SchnorrRound0Msg_Signing
	Request isSchnorrRound0Msg_Request `protobuf_oneof:"request"`
}

func (x *SchnorrRound0Msg) Reset() {
	*x = SchnorrRound0Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound0Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound0Msg) ProtoMessage() {}

func (x *SchnorrRound0Msg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound0Msg.ProtoReflect.Descriptor instead.
func (*SchnorrRound0Msg) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{0}
}

func (x *SchnorrRound0Msg) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SchnorrRound0Msg) GetSType() SignatureType {
	if x != nil {
		return x.SType
	}
	return SignatureType_SCHNORRv1
}

func (x *SchnorrRound0Msg) GetSignerCerts() [][]byte {
	if x != nil {
		return x.SignerCerts
	}
	return nil
}

func (m *SchnorrRound0Msg) GetRequest() isSchnorrRound0Msg_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *SchnorrRound0Msg) GetThreshold() int32 {
	if x, ok := x.GetRequest().(*SchnorrRound0Msg_Threshold); ok {
		return x.Threshold
	}
	return 0
}

func (x *SchnorrRound0Msg) GetSigning() *SignRequest {
	if x, ok := x.GetRequest().(*SchnorrRound0Msg_Signing); ok {
		return x.Signing
	}
	return nil
}

type isSchnorrRound0Msg_Request interface {
	isSchnorrRound0Msg_Request()
}

type SchnorrRound0Msg_Threshold struct {
	Threshold int32 `protobuf:"varint,4,opt,name=threshold,proto3,oneof"` //for keygen
}

type SchnorrRound0Msg_Signing struct {
	Signing *SignRequest `protobuf:"bytes,5,opt,name=signing,proto3,oneof"` //for sign
}

func (*SchnorrRound0Msg_Threshold) isSchnorrRound0Msg_Request() {}

func (*SchnorrRound0Msg_Signing) isSchnorrRound0Msg_Request() {}

type SignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Message   []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignRequest) Reset() {
	*x = SignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignRequest) ProtoMessage() {}

func (x *SignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignRequest.ProtoReflect.Descriptor instead.
func (*SignRequest) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{1}
}

func (x *SignRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SignRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type SchnorrRound1Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	SenderId   int32  `protobuf:"varint,2,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	Commitment []byte `protobuf:"bytes,3,opt,name=Commitment,proto3" json:"Commitment,omitempty"`
}

func (x *SchnorrRound1Msg) Reset() {
	*x = SchnorrRound1Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound1Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound1Msg) ProtoMessage() {}

func (x *SchnorrRound1Msg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound1Msg.ProtoReflect.Descriptor instead.
func (*SchnorrRound1Msg) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{2}
}

func (x *SchnorrRound1Msg) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SchnorrRound1Msg) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *SchnorrRound1Msg) GetCommitment() []byte {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type SchnorrRound2Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId         string `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	SenderId          int32  `protobuf:"varint,2,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	ReceiverId        int32  `protobuf:"varint,3,opt,name=ReceiverId,proto3" json:"ReceiverId,omitempty"`
	ShareKey          []byte `protobuf:"bytes,4,opt,name=ShareKey,proto3" json:"ShareKey,omitempty"`
	SimulatedShareKey []byte `protobuf:"bytes,5,opt,name=SimulatedShareKey,proto3" json:"SimulatedShareKey,omitempty"`
	Poly              []byte `protobuf:"bytes,6,opt,name=Poly,proto3" json:"Poly,omitempty"`
}

func (x *SchnorrRound2Msg) Reset() {
	*x = SchnorrRound2Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound2Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound2Msg) ProtoMessage() {}

func (x *SchnorrRound2Msg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound2Msg.ProtoReflect.Descriptor instead.
func (*SchnorrRound2Msg) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{3}
}

func (x *SchnorrRound2Msg) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SchnorrRound2Msg) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *SchnorrRound2Msg) GetReceiverId() int32 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *SchnorrRound2Msg) GetShareKey() []byte {
	if x != nil {
		return x.ShareKey
	}
	return nil
}

func (x *SchnorrRound2Msg) GetSimulatedShareKey() []byte {
	if x != nil {
		return x.SimulatedShareKey
	}
	return nil
}

func (x *SchnorrRound2Msg) GetPoly() []byte {
	if x != nil {
		return x.Poly
	}
	return nil
}

type SchnorrRound3Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	SenderId  int32  `protobuf:"varint,2,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	// Types that are assignable to Data:
	//	*SchnorrRound3Msg_PublicKey
	//	*SchnorrRound3Msg_SigmaI
	Data isSchnorrRound3Msg_Data `protobuf_oneof:"Data"`
}

func (x *SchnorrRound3Msg) Reset() {
	*x = SchnorrRound3Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound3Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound3Msg) ProtoMessage() {}

func (x *SchnorrRound3Msg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound3Msg.ProtoReflect.Descriptor instead.
func (*SchnorrRound3Msg) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{4}
}

func (x *SchnorrRound3Msg) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SchnorrRound3Msg) GetSenderId() int32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (m *SchnorrRound3Msg) GetData() isSchnorrRound3Msg_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SchnorrRound3Msg) GetPublicKey() []byte {
	if x, ok := x.GetData().(*SchnorrRound3Msg_PublicKey); ok {
		return x.PublicKey
	}
	return nil
}

func (x *SchnorrRound3Msg) GetSigmaI() []byte {
	if x, ok := x.GetData().(*SchnorrRound3Msg_SigmaI); ok {
		return x.SigmaI
	}
	return nil
}

type isSchnorrRound3Msg_Data interface {
	isSchnorrRound3Msg_Data()
}

type SchnorrRound3Msg_PublicKey struct {
	PublicKey []byte `protobuf:"bytes,3,opt,name=PublicKey,proto3,oneof"`
}

type SchnorrRound3Msg_SigmaI struct {
	SigmaI []byte `protobuf:"bytes,4,opt,name=SigmaI,proto3,oneof"`
}

func (*SchnorrRound3Msg_PublicKey) isSchnorrRound3Msg_Data() {}

func (*SchnorrRound3Msg_SigmaI) isSchnorrRound3Msg_Data() {}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                 `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Challenge []byte                 `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{5}
}

func (x *AuthRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthRequest) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *AuthRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	SignatureR  []byte `protobuf:"bytes,2,opt,name=signatureR,proto3" json:"signatureR,omitempty"`
	SignatureS  []byte `protobuf:"bytes,3,opt,name=signatureS,proto3" json:"signatureS,omitempty"`
	Certificate []byte `protobuf:"bytes,4,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{6}
}

func (x *AuthResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthResponse) GetSignatureR() []byte {
	if x != nil {
		return x.SignatureR
	}
	return nil
}

func (x *AuthResponse) GetSignatureS() []byte {
	if x != nil {
		return x.SignatureS
	}
	return nil
}

func (x *AuthResponse) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type SchnorrSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SType               SignatureType `protobuf:"varint,1,opt,name=sType,proto3,enum=thresholdagent.SignatureType" json:"sType,omitempty"`
	CompressedPublicKey []byte        `protobuf:"bytes,2,opt,name=compressedPublicKey,proto3" json:"compressedPublicKey,omitempty"`
	SigningData         []byte        `protobuf:"bytes,3,opt,name=signingData,proto3" json:"signingData,omitempty"`
	R                   []byte        `protobuf:"bytes,4,opt,name=R,proto3" json:"R,omitempty"`
	S                   []byte        `protobuf:"bytes,5,opt,name=S,proto3" json:"S,omitempty"`
}

func (x *SchnorrSignature) Reset() {
	*x = SchnorrSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrSignature) ProtoMessage() {}

func (x *SchnorrSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrSignature.ProtoReflect.Descriptor instead.
func (*SchnorrSignature) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{7}
}

func (x *SchnorrSignature) GetSType() SignatureType {
	if x != nil {
		return x.SType
	}
	return SignatureType_SCHNORRv1
}

func (x *SchnorrSignature) GetCompressedPublicKey() []byte {
	if x != nil {
		return x.CompressedPublicKey
	}
	return nil
}

func (x *SchnorrSignature) GetSigningData() []byte {
	if x != nil {
		return x.SigningData
	}
	return nil
}

func (x *SchnorrSignature) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *SchnorrSignature) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

type SchnorrRound1MsgList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*SchnorrRound1Msg `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SchnorrRound1MsgList) Reset() {
	*x = SchnorrRound1MsgList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound1MsgList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound1MsgList) ProtoMessage() {}

func (x *SchnorrRound1MsgList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound1MsgList.ProtoReflect.Descriptor instead.
func (*SchnorrRound1MsgList) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{8}
}

func (x *SchnorrRound1MsgList) GetMessages() []*SchnorrRound1Msg {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SchnorrRound2MsgList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*SchnorrRound2Msg `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SchnorrRound2MsgList) Reset() {
	*x = SchnorrRound2MsgList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound2MsgList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound2MsgList) ProtoMessage() {}

func (x *SchnorrRound2MsgList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound2MsgList.ProtoReflect.Descriptor instead.
func (*SchnorrRound2MsgList) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{9}
}

func (x *SchnorrRound2MsgList) GetMessages() []*SchnorrRound2Msg {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SchnorrRound3MsgList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*SchnorrRound3Msg `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SchnorrRound3MsgList) Reset() {
	*x = SchnorrRound3MsgList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchnorrRound3MsgList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchnorrRound3MsgList) ProtoMessage() {}

func (x *SchnorrRound3MsgList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchnorrRound3MsgList.ProtoReflect.Descriptor instead.
func (*SchnorrRound3MsgList) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{10}
}

func (x *SchnorrRound3MsgList) GetMessages() []*SchnorrRound3Msg {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ResultMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	Status    Status `protobuf:"varint,2,opt,name=status,proto3,enum=thresholdagent.Status" json:"status,omitempty"`
}

func (x *ResultMsg) Reset() {
	*x = ResultMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_thresholdagent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultMsg) ProtoMessage() {}

func (x *ResultMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thresholdagent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultMsg.ProtoReflect.Descriptor instead.
func (*ResultMsg) Descriptor() ([]byte, []int) {
	return file_proto_thresholdagent_proto_rawDescGZIP(), []int{11}
}

func (x *ResultMsg) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ResultMsg) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

var File_proto_thresholdagent_proto protoreflect.FileDescriptor

var file_proto_thresholdagent_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x01,
	0x0a, 0x10, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x30, 0x4d,
	0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x05, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x43,
	0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x0b, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x6c, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x31, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xca, 0x01, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x32, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x53,
	0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x6c,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x50, 0x6f, 0x6c, 0x79, 0x22, 0x8e, 0x01,
	0x0a, 0x10, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x33, 0x4d,
	0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x09,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x49, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x49, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x83,
	0x01, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x52, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x52, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53, 0x22,
	0x54, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f,
	0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x4d, 0x73,
	0x67, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x14, 0x53,
	0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x33, 0x4d, 0x73, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x33, 0x4d, 0x73, 0x67, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x59, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x3c, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x47, 0x0a, 0x0d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x43, 0x48, 0x4e, 0x4f, 0x52, 0x52, 0x76, 0x31, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x43,
	0x48, 0x4e, 0x4f, 0x52, 0x52, 0x76, 0x32, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x43, 0x44,
	0x53, 0x41, 0x76, 0x31, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x43, 0x44, 0x53, 0x41, 0x76,
	0x32, 0x10, 0x03, 0x32, 0xc3, 0x06, 0x0a, 0x0e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x10, 0x44, 0x6b, 0x67, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72,
	0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x12, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x30, 0x4d, 0x73, 0x67, 0x1a, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f,
	0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x10, 0x44, 0x6b, 0x67, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x32, 0x12, 0x24, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x10, 0x44, 0x6b, 0x67, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x33, 0x12, 0x24, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x32, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f,
	0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x33, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x14, 0x44, 0x6b, 0x67, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x19, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67,
	0x1a, 0x19, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x11, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x31, 0x12, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x30, 0x4d, 0x73, 0x67, 0x1a, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x31, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x6e,
	0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x12, 0x24, 0x2e,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x4d, 0x73, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x32, 0x4d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x11, 0x53,
	0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x33,
	0x12, 0x24, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x4d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x33, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x11, 0x53, 0x63,
	0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x34, 0x12,
	0x24, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x33, 0x4d, 0x73,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x00, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x2d, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x2d, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_thresholdagent_proto_rawDescOnce sync.Once
	file_proto_thresholdagent_proto_rawDescData = file_proto_thresholdagent_proto_rawDesc
)

func file_proto_thresholdagent_proto_rawDescGZIP() []byte {
	file_proto_thresholdagent_proto_rawDescOnce.Do(func() {
		file_proto_thresholdagent_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_thresholdagent_proto_rawDescData)
	})
	return file_proto_thresholdagent_proto_rawDescData
}

var file_proto_thresholdagent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_thresholdagent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_thresholdagent_proto_goTypes = []interface{}{
	(Status)(0),                   // 0: thresholdagent.Status
	(SignatureType)(0),            // 1: thresholdagent.SignatureType
	(*SchnorrRound0Msg)(nil),      // 2: thresholdagent.SchnorrRound0Msg
	(*SignRequest)(nil),           // 3: thresholdagent.SignRequest
	(*SchnorrRound1Msg)(nil),      // 4: thresholdagent.SchnorrRound1Msg
	(*SchnorrRound2Msg)(nil),      // 5: thresholdagent.SchnorrRound2Msg
	(*SchnorrRound3Msg)(nil),      // 6: thresholdagent.SchnorrRound3Msg
	(*AuthRequest)(nil),           // 7: thresholdagent.AuthRequest
	(*AuthResponse)(nil),          // 8: thresholdagent.AuthResponse
	(*SchnorrSignature)(nil),      // 9: thresholdagent.SchnorrSignature
	(*SchnorrRound1MsgList)(nil),  // 10: thresholdagent.SchnorrRound1MsgList
	(*SchnorrRound2MsgList)(nil),  // 11: thresholdagent.SchnorrRound2MsgList
	(*SchnorrRound3MsgList)(nil),  // 12: thresholdagent.SchnorrRound3MsgList
	(*ResultMsg)(nil),             // 13: thresholdagent.ResultMsg
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_proto_thresholdagent_proto_depIdxs = []int32{
	1,  // 0: thresholdagent.SchnorrRound0Msg.sType:type_name -> thresholdagent.SignatureType
	3,  // 1: thresholdagent.SchnorrRound0Msg.signing:type_name -> thresholdagent.SignRequest
	14, // 2: thresholdagent.AuthRequest.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 3: thresholdagent.SchnorrSignature.sType:type_name -> thresholdagent.SignatureType
	4,  // 4: thresholdagent.SchnorrRound1MsgList.messages:type_name -> thresholdagent.SchnorrRound1Msg
	5,  // 5: thresholdagent.SchnorrRound2MsgList.messages:type_name -> thresholdagent.SchnorrRound2Msg
	6,  // 6: thresholdagent.SchnorrRound3MsgList.messages:type_name -> thresholdagent.SchnorrRound3Msg
	0,  // 7: thresholdagent.ResultMsg.status:type_name -> thresholdagent.Status
	7,  // 8: thresholdagent.ThresholdAgent.Authenticate:input_type -> thresholdagent.AuthRequest
	2,  // 9: thresholdagent.ThresholdAgent.DkgSchnorrRound1:input_type -> thresholdagent.SchnorrRound0Msg
	10, // 10: thresholdagent.ThresholdAgent.DkgSchnorrRound2:input_type -> thresholdagent.SchnorrRound1MsgList
	11, // 11: thresholdagent.ThresholdAgent.DkgSchnorrRound3:input_type -> thresholdagent.SchnorrRound2MsgList
	13, // 12: thresholdagent.ThresholdAgent.DkgSchnorrRoundFinal:input_type -> thresholdagent.ResultMsg
	2,  // 13: thresholdagent.ThresholdAgent.SchnorrSignRound1:input_type -> thresholdagent.SchnorrRound0Msg
	10, // 14: thresholdagent.ThresholdAgent.SchnorrSignRound2:input_type -> thresholdagent.SchnorrRound1MsgList
	11, // 15: thresholdagent.ThresholdAgent.SchnorrSignRound3:input_type -> thresholdagent.SchnorrRound2MsgList
	12, // 16: thresholdagent.ThresholdAgent.SchnorrSignRound4:input_type -> thresholdagent.SchnorrRound3MsgList
	8,  // 17: thresholdagent.ThresholdAgent.Authenticate:output_type -> thresholdagent.AuthResponse
	4,  // 18: thresholdagent.ThresholdAgent.DkgSchnorrRound1:output_type -> thresholdagent.SchnorrRound1Msg
	11, // 19: thresholdagent.ThresholdAgent.DkgSchnorrRound2:output_type -> thresholdagent.SchnorrRound2MsgList
	6,  // 20: thresholdagent.ThresholdAgent.DkgSchnorrRound3:output_type -> thresholdagent.SchnorrRound3Msg
	13, // 21: thresholdagent.ThresholdAgent.DkgSchnorrRoundFinal:output_type -> thresholdagent.ResultMsg
	4,  // 22: thresholdagent.ThresholdAgent.SchnorrSignRound1:output_type -> thresholdagent.SchnorrRound1Msg
	11, // 23: thresholdagent.ThresholdAgent.SchnorrSignRound2:output_type -> thresholdagent.SchnorrRound2MsgList
	6,  // 24: thresholdagent.ThresholdAgent.SchnorrSignRound3:output_type -> thresholdagent.SchnorrRound3Msg
	9,  // 25: thresholdagent.ThresholdAgent.SchnorrSignRound4:output_type -> thresholdagent.SchnorrSignature
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_thresholdagent_proto_init() }
func file_proto_thresholdagent_proto_init() {
	if File_proto_thresholdagent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_thresholdagent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound0Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound1Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound2Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound3Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound1MsgList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound2MsgList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchnorrRound3MsgList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_thresholdagent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_thresholdagent_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SchnorrRound0Msg_Threshold)(nil),
		(*SchnorrRound0Msg_Signing)(nil),
	}
	file_proto_thresholdagent_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SchnorrRound3Msg_PublicKey)(nil),
		(*SchnorrRound3Msg_SigmaI)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_thresholdagent_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_thresholdagent_proto_goTypes,
		DependencyIndexes: file_proto_thresholdagent_proto_depIdxs,
		EnumInfos:         file_proto_thresholdagent_proto_enumTypes,
		MessageInfos:      file_proto_thresholdagent_proto_msgTypes,
	}.Build()
	File_proto_thresholdagent_proto = out.File
	file_proto_thresholdagent_proto_rawDesc = nil
	file_proto_thresholdagent_proto_goTypes = nil
	file_proto_thresholdagent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ThresholdAgentClient is the client API for ThresholdAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ThresholdAgentClient interface {
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	DkgSchnorrRound1(ctx context.Context, in *SchnorrRound0Msg, opts ...grpc.CallOption) (*SchnorrRound1Msg, error)
	DkgSchnorrRound2(ctx context.Context, in *SchnorrRound1MsgList, opts ...grpc.CallOption) (*SchnorrRound2MsgList, error)
	DkgSchnorrRound3(ctx context.Context, in *SchnorrRound2MsgList, opts ...grpc.CallOption) (*SchnorrRound3Msg, error)
	DkgSchnorrRoundFinal(ctx context.Context, in *ResultMsg, opts ...grpc.CallOption) (*ResultMsg, error)
	SchnorrSignRound1(ctx context.Context, in *SchnorrRound0Msg, opts ...grpc.CallOption) (*SchnorrRound1Msg, error)
	SchnorrSignRound2(ctx context.Context, in *SchnorrRound1MsgList, opts ...grpc.CallOption) (*SchnorrRound2MsgList, error)
	SchnorrSignRound3(ctx context.Context, in *SchnorrRound2MsgList, opts ...grpc.CallOption) (*SchnorrRound3Msg, error)
	SchnorrSignRound4(ctx context.Context, in *SchnorrRound3MsgList, opts ...grpc.CallOption) (*SchnorrSignature, error)
}

type thresholdAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewThresholdAgentClient(cc grpc.ClientConnInterface) ThresholdAgentClient {
	return &thresholdAgentClient{cc}
}

func (c *thresholdAgentClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) DkgSchnorrRound1(ctx context.Context, in *SchnorrRound0Msg, opts ...grpc.CallOption) (*SchnorrRound1Msg, error) {
	out := new(SchnorrRound1Msg)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/DkgSchnorrRound1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) DkgSchnorrRound2(ctx context.Context, in *SchnorrRound1MsgList, opts ...grpc.CallOption) (*SchnorrRound2MsgList, error) {
	out := new(SchnorrRound2MsgList)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/DkgSchnorrRound2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) DkgSchnorrRound3(ctx context.Context, in *SchnorrRound2MsgList, opts ...grpc.CallOption) (*SchnorrRound3Msg, error) {
	out := new(SchnorrRound3Msg)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/DkgSchnorrRound3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) DkgSchnorrRoundFinal(ctx context.Context, in *ResultMsg, opts ...grpc.CallOption) (*ResultMsg, error) {
	out := new(ResultMsg)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/DkgSchnorrRoundFinal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) SchnorrSignRound1(ctx context.Context, in *SchnorrRound0Msg, opts ...grpc.CallOption) (*SchnorrRound1Msg, error) {
	out := new(SchnorrRound1Msg)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/SchnorrSignRound1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) SchnorrSignRound2(ctx context.Context, in *SchnorrRound1MsgList, opts ...grpc.CallOption) (*SchnorrRound2MsgList, error) {
	out := new(SchnorrRound2MsgList)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/SchnorrSignRound2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) SchnorrSignRound3(ctx context.Context, in *SchnorrRound2MsgList, opts ...grpc.CallOption) (*SchnorrRound3Msg, error) {
	out := new(SchnorrRound3Msg)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/SchnorrSignRound3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *thresholdAgentClient) SchnorrSignRound4(ctx context.Context, in *SchnorrRound3MsgList, opts ...grpc.CallOption) (*SchnorrSignature, error) {
	out := new(SchnorrSignature)
	err := c.cc.Invoke(ctx, "/thresholdagent.ThresholdAgent/SchnorrSignRound4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ThresholdAgentServer is the server API for ThresholdAgent service.
type ThresholdAgentServer interface {
	Authenticate(context.Context, *AuthRequest) (*AuthResponse, error)
	DkgSchnorrRound1(context.Context, *SchnorrRound0Msg) (*SchnorrRound1Msg, error)
	DkgSchnorrRound2(context.Context, *SchnorrRound1MsgList) (*SchnorrRound2MsgList, error)
	DkgSchnorrRound3(context.Context, *SchnorrRound2MsgList) (*SchnorrRound3Msg, error)
	DkgSchnorrRoundFinal(context.Context, *ResultMsg) (*ResultMsg, error)
	SchnorrSignRound1(context.Context, *SchnorrRound0Msg) (*SchnorrRound1Msg, error)
	SchnorrSignRound2(context.Context, *SchnorrRound1MsgList) (*SchnorrRound2MsgList, error)
	SchnorrSignRound3(context.Context, *SchnorrRound2MsgList) (*SchnorrRound3Msg, error)
	SchnorrSignRound4(context.Context, *SchnorrRound3MsgList) (*SchnorrSignature, error)
}

// UnimplementedThresholdAgentServer can be embedded to have forward compatible implementations.
type UnimplementedThresholdAgentServer struct {
}

func (*UnimplementedThresholdAgentServer) Authenticate(context.Context, *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedThresholdAgentServer) DkgSchnorrRound1(context.Context, *SchnorrRound0Msg) (*SchnorrRound1Msg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DkgSchnorrRound1 not implemented")
}
func (*UnimplementedThresholdAgentServer) DkgSchnorrRound2(context.Context, *SchnorrRound1MsgList) (*SchnorrRound2MsgList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DkgSchnorrRound2 not implemented")
}
func (*UnimplementedThresholdAgentServer) DkgSchnorrRound3(context.Context, *SchnorrRound2MsgList) (*SchnorrRound3Msg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DkgSchnorrRound3 not implemented")
}
func (*UnimplementedThresholdAgentServer) DkgSchnorrRoundFinal(context.Context, *ResultMsg) (*ResultMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DkgSchnorrRoundFinal not implemented")
}
func (*UnimplementedThresholdAgentServer) SchnorrSignRound1(context.Context, *SchnorrRound0Msg) (*SchnorrRound1Msg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchnorrSignRound1 not implemented")
}
func (*UnimplementedThresholdAgentServer) SchnorrSignRound2(context.Context, *SchnorrRound1MsgList) (*SchnorrRound2MsgList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchnorrSignRound2 not implemented")
}
func (*UnimplementedThresholdAgentServer) SchnorrSignRound3(context.Context, *SchnorrRound2MsgList) (*SchnorrRound3Msg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchnorrSignRound3 not implemented")
}
func (*UnimplementedThresholdAgentServer) SchnorrSignRound4(context.Context, *SchnorrRound3MsgList) (*SchnorrSignature, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchnorrSignRound4 not implemented")
}

func RegisterThresholdAgentServer(s *grpc.Server, srv ThresholdAgentServer) {
	s.RegisterService(&_ThresholdAgent_serviceDesc, srv)
}

func _ThresholdAgent_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_DkgSchnorrRound1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound0Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).DkgSchnorrRound1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/DkgSchnorrRound1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).DkgSchnorrRound1(ctx, req.(*SchnorrRound0Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_DkgSchnorrRound2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound1MsgList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).DkgSchnorrRound2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/DkgSchnorrRound2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).DkgSchnorrRound2(ctx, req.(*SchnorrRound1MsgList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_DkgSchnorrRound3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound2MsgList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).DkgSchnorrRound3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/DkgSchnorrRound3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).DkgSchnorrRound3(ctx, req.(*SchnorrRound2MsgList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_DkgSchnorrRoundFinal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResultMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).DkgSchnorrRoundFinal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/DkgSchnorrRoundFinal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).DkgSchnorrRoundFinal(ctx, req.(*ResultMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_SchnorrSignRound1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound0Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).SchnorrSignRound1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/SchnorrSignRound1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).SchnorrSignRound1(ctx, req.(*SchnorrRound0Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_SchnorrSignRound2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound1MsgList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).SchnorrSignRound2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/SchnorrSignRound2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).SchnorrSignRound2(ctx, req.(*SchnorrRound1MsgList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_SchnorrSignRound3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound2MsgList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).SchnorrSignRound3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/SchnorrSignRound3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).SchnorrSignRound3(ctx, req.(*SchnorrRound2MsgList))
	}
	return interceptor(ctx, in, info, handler)
}

func _ThresholdAgent_SchnorrSignRound4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchnorrRound3MsgList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ThresholdAgentServer).SchnorrSignRound4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/thresholdagent.ThresholdAgent/SchnorrSignRound4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ThresholdAgentServer).SchnorrSignRound4(ctx, req.(*SchnorrRound3MsgList))
	}
	return interceptor(ctx, in, info, handler)
}

var _ThresholdAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "thresholdagent.ThresholdAgent",
	HandlerType: (*ThresholdAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _ThresholdAgent_Authenticate_Handler,
		},
		{
			MethodName: "DkgSchnorrRound1",
			Handler:    _ThresholdAgent_DkgSchnorrRound1_Handler,
		},
		{
			MethodName: "DkgSchnorrRound2",
			Handler:    _ThresholdAgent_DkgSchnorrRound2_Handler,
		},
		{
			MethodName: "DkgSchnorrRound3",
			Handler:    _ThresholdAgent_DkgSchnorrRound3_Handler,
		},
		{
			MethodName: "DkgSchnorrRoundFinal",
			Handler:    _ThresholdAgent_DkgSchnorrRoundFinal_Handler,
		},
		{
			MethodName: "SchnorrSignRound1",
			Handler:    _ThresholdAgent_SchnorrSignRound1_Handler,
		},
		{
			MethodName: "SchnorrSignRound2",
			Handler:    _ThresholdAgent_SchnorrSignRound2_Handler,
		},
		{
			MethodName: "SchnorrSignRound3",
			Handler:    _ThresholdAgent_SchnorrSignRound3_Handler,
		},
		{
			MethodName: "SchnorrSignRound4",
			Handler:    _ThresholdAgent_SchnorrSignRound4_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/thresholdagent.proto",
}
